name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'  # Déclenche le workflow sur toutes les branches
  pull_request:
    branches:
      - '**'  # Déclenche le workflow sur toutes les branches de la pull request

jobs:
  security-checker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: exif, mysqli, pdo, pdo_mysql, zip, gd, http

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y curl git libzip-dev libwebp-dev libjpeg-dev libpng-dev libxpm-dev
          curl -sSk https://getcomposer.org/installer | php -- --disable-tls && sudo mv composer.phar /usr/local/bin/composer
          composer install -o

      - name: Install PHP Security Checker
        run: |
          curl -o /tmp/security_checker -L "https://github.com/fabpot/local-php-security-checker/releases/download/v2.0.5/local-php-security-checker_2.0.5_linux_amd64"
          sudo mv /tmp/security_checker /usr/bin/local-php-security-checker
          sudo chmod +x /usr/bin/local-php-security-checker

      - name: Run security check
        run: local-php-security-checker --path=./composer.lock

  doctrine-schema-validate:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: toor
          MYSQL_DATABASE: carsfleet
          MYSQL_USER: carsfleet
          MYSQL_PASSWORD: carsfleet
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
          --publish=3306:3306  # Expose MySQL port to host
    env:
      DATABASE_URL: 'mysql://root:toor@localhost:3306/carsfleet?serverVersion=5.7&charset=utf8mb4'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: exif, mysqli, pdo, pdo_mysql, zip, gd, http

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y curl git libzip-dev libwebp-dev libjpeg-dev libpng-dev libxpm-dev
          curl -sSk https://getcomposer.org/installer | php -- --disable-tls && sudo mv composer.phar /usr/local/bin/composer
          composer install -o
          php bin/console doctrine:database:drop --force
          php bin/console doctrine:database:create
          php bin/console doctrine:migration:migrate --no-interaction

      - name: Validate schema
        run: php bin/console doctrine:schema:validate

  twig-lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: exif, mysqli, pdo, pdo_mysql, zip, gd, http

      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y curl git libzip-dev libwebp-dev libjpeg-dev libpng-dev libxpm-dev
          curl -sSk https://getcomposer.org/installer | php -- --disable-tls && sudo mv composer.phar /usr/local/bin/composer
          composer install -o

      - name: Lint Twig templates
        run: php bin/console lint:twig ./templates
    continue-on-error: true
